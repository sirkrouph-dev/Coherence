[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neuromorphic-system"
version = "0.1.0"
description = "A comprehensive neuromorphic programming system grounded in biological neuroscience for edge computing"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = [
    "neuromorphic",
    "neural-networks",
    "spiking-neural-networks",
    "edge-computing",
    "neuroscience",
    "brain-inspired",
    "jetson",
    "STDP",
    "neuromodulation"
]
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

dependencies = [
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "opencv-python>=4.5.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "typing-extensions>=4.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-benchmark>=3.4.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "coverage>=6.0.0",
    "pre-commit>=2.18.0",
    "jupyter>=1.0.0",
    "ipython>=8.0.0"
]
gpu = [
    "cupy-cuda11x>=10.0.0",
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "psutil>=5.8.0",
    "nvidia-ml-py>=11.0.0"
]
jetson = [
    "psutil>=5.8.0"
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.18.0",
    "myst-parser>=0.17.0"
]
all = [
    "neuromorphic-system[dev,gpu,docs]"
]

[project.urls]
Homepage = "https://github.com/yourusername/neuromorphic-system"
Documentation = "https://neuromorphic-system.readthedocs.io"
Repository = "https://github.com/yourusername/neuromorphic-system.git"
"Bug Tracker" = "https://github.com/yourusername/neuromorphic-system/issues"
Changelog = "https://github.com/yourusername/neuromorphic-system/blob/main/CHANGELOG.md"

[project.scripts]
neuron-demo = "demo.sensorimotor_demo:main"
neuron-train = "demo.sensorimotor_training:main"
neuron-jetson = "demo.jetson_demo:main"
neuron-test = "tests.test_system:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "api*", "demo*", "tests*", "scripts*", "tools*", "benchmarks*"]
exclude = ["archive*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
  | venv_neuron
)/
'''

[tool.isort]
profile = "black"
line_length = 88
skip = [".git", "__pycache__", ".venv", "venv", "venv_neuron", "build", "dist"]
known_first_party = ["core", "api", "demo", "scripts", "tools", "benchmarks"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
    "benchmarks",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests requiring GPU (deselect with '-m \"not gpu\"')",
    "jetson: marks tests for Jetson platform",
    "integration: marks integration tests"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.coverage.run]
branch = true
source = ["core", "api"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/venv_neuron/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"
